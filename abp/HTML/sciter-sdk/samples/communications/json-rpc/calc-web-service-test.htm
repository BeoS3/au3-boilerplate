<html>
<head>
<style> 

  html 
  { 
    background-color: threedface; 
  }
  #sandbox 
  { 
    margin:20px; 
    padding:20px; 
    overflow:auto;
    background-color:window; 
    border:1px solid threedface; 
    width:*; height:*;
  }
  
  #indicator 
  {
    background-image: url(indicator.png);
    background-repeat: expand;
    background-position: 12px 12px 12px 12px;
    
    padding:4px 4px 4px 20px; 
    visibility:hidden;
    position:fixed;
    width: max-intrinsic;
    right:10px;
    bottom:10px;
  }
  
  #indicator:busy // that small spinning thing...
  {
    visibility:visible;
    foreground-image:url(res:activity.gif); 
    foreground-repeat:no-repeat; 
    foreground-position:4px 50%; 
  }
      
</style>
  <script src="sciter:lib/root-extender.tis" type="text/tiscript"/> 
  <script src="jsonrpc.tis" type="text/tiscript"/> 
  <script type="text/tiscript">
  
    var sandbox = $(#sandbox);
    var indicator = $(#indicator);
    if( !sandbox || !indicator) 
      stderr << "sandbox or indicator not found"; 
      
    sandbox.value = "ready!";
    
    var rpc = new JsonRPC( "http://www.terrainformatica.com/tests/calc-web-service.php", indicator );
    //try this to get 404 request:
    //var rpc = new JsonRPC( "http://www.terrainformatica.com/tests/calc-web-service-no.php", indicator );

    // show delivered data
    function show(data,status)
    {
      if( data instanceof Error ) // Error parsing received data
        sandbox.value = String.$(Error: {data.toString()} Status: {status});
      else if( data instanceof String ) // not a script object...
        sandbox.value = String.$(Text: {data} Status: {status});
      else if( data instanceof Stream ) // not a script object...
        sandbox.value = String.$(Stream, Status: {status} Url: { data.name } Content: {data.toString()});
        //sandbox.value = "Status:" + status + "\nText(stream):" + data.toString();
      else
        sandbox.value = String.printf("Value: %v Status: %d", data, status );  // parsed data, print it as JSON+ literal (%v)
    }

    // async requests
    function on_SumA_click(btn)
    {
      var p0 = $(#p0).value;
      var p1 = $(#p1).value;
      
      rpc.post( show, "add", p0, p1);
      
    }

    function on_SubA_click(btn)
    {
      var p0 = $(#p0).value;
      var p1 = $(#p1).value;
      
      rpc.post( show, "sub", p0, p1 ); 
      
    }
    
    // sync requests
    function on_SumS_click(btn)
    {
      var p0 = $(#p0).value;
      var p1 = $(#p1).value;
      
      var (status,v) = rpc.send("add", p0, p1);
      // at this point data are delivered to the v, show them
      show(v,status,null);
    }

    function on_SubS_click(btn)
    {
      var p0 = $(#p0).value;
      var p1 = $(#p1).value;

      var (status,v) = rpc.send("sub", p0, p1);      
      show(v,status,null);
       
    }
    
    
    </script>

</head>

<body>
<h1>JSON Remote Procedure Call Demo, ASYNC amd SYNC calls</h1>
<p>Input two numbers and press + or - buttons<br/>
<input type="number" id="p0" value=0 size=8 step=1/>
<input type="number" id="p1" value=0 size=8 step=1/> 
async: <button id="SumA">+</button><button id="SubA">-</button>
sync: <button id="SumS">+</button><button id="SubS">-</button>
<pre id="sandbox">
  sandbox
</pre>
<div id="indicator">Talking...</div>
</body>

</html>
