<html>
<head>
  <style>
    div.sensor { width:100px; height:100px; border:1px dotted; background-color:yellow; prototype:Sensor; }
    div.sensor:hover { background-color:gold; }
    table.output
    { 
      margin-top:20px;
      height:*; 
      width:*; 
      border:1px solid;
      overflow:auto;
    }
    table.output > tr > *
    { 
      border-bottom:1px solid;
    }
    
    table.output > tr[type="MOUSE_ENTER"]  { background-color: lime;  }
    table.output > tr[type="MOUSE_LEAVE"]  { background-color: grey;  }
    table.output > tr[type="MOUSE_DOWN"]   { background-color: coral; }
    table.output > tr[type="MOUSE_UP"]     { background-color: gold;  }
    table.output > tr[type="MOUSE_DCLICK"] { background-color: hotpink; }
    table.output > tr[type="MOUSE_WHEEL"]  { background-color: mediumspringgreen; }
    table.output > tr[type="MOUSE_TICK"]   { background-color: turquoise;  }
    table.output > tr[type="MOUSE_IDLE"]   { background-color: skyblue; }
    
  </style>  
  <script type="text/tiscript">
  
   var output = self.select("table.output"); 
   
   function report(evt, name)
   {
     function buttons()
     {
       if(evt.wheelDelta)
         return String.printf("wheelDelta:%d",evt.wheelDelta);
       else
         return (evt.mainButton? "mainButton ":"") + (evt.propButton? "propButton ":"");
     }
   
     var row;
     if(output.length == 101)
       row = output[1]; // reuse first one
     else
     { // create brand new
       row = new Element("tr"); 
       row.insert(new Element("td"));
       row.insert(new Element("td"));
       row.insert(new Element("td"));
     }
     row[0].text = name;
     row[1].text = buttons();
     row[2].text = String.printf("x=%d, y=%d", evt.x, evt.y);
     output.insert(row); // append it to the end.
     row.attributes#type = name;
     row.update();
     row.scrollToView();
   }
   
   type Sensor: Behavior
   {
     function onMouse(evt)
     {
       switch(evt.type) 
       {
         case Event.MOUSE_ENTER:    report(evt,"MOUSE_ENTER"); return true;; 
         case Event.MOUSE_LEAVE:    report(evt,"MOUSE_LEAVE"); return true;;  
         case Event.MOUSE_MOVE:     report(evt,"MOUSE_MOVE"); return true;; 
         case Event.MOUSE_DOWN:     report(evt,"MOUSE_DOWN"); return true;; 
         case Event.MOUSE_UP:       report(evt,"MOUSE_UP"); return true;; 
         case Event.MOUSE_DCLICK:   report(evt,"MOUSE_DCLICK"); return true;; 
         case Event.MOUSE_WHEEL:    report(evt,"MOUSE_WHEEL"); return true;; 
         case Event.MOUSE_TICK:     report(evt,"MOUSE_TICK"); return true;; 
         case Event.MOUSE_IDLE:     report(evt,"MOUSE_IDLE"); return true;; 
       }
       return false;
     }
   }
 
  </script>  
<head>
<body>
Mouse sensor pad:
<div.sensor></div>
<table.output fixedrows=1>
<tr><th>Event name</th><th>Buttons</th><th>Coordinates</th></tr>
</table>
</body>
</html>