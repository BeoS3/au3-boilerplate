<html>
<head>
<style> 

  html 
  { 
    background-color: threedface; 
  }
  #sandbox 
  { 
    margin:20px; 
    padding:20px; 
    overflow:auto;
    background-color:window; 
    border:1px solid threedface; 
    width:*; height:*;
  }
  
  #sandbox:busy // that small spinning thing...
  {
    foreground-image:url(res:activity.gif); 
    foreground-repeat:no-repeat; 
    foreground-position:4px 4px; 
  }
</style>
  <script type="text/tiscript">
  
    // decorator
    function @web_method(func)
    {
      return function(arguments..) // our proxy method
      {
        var rq_params = { "method": func.name.toString() }; 
        var n = 0; for(var arg in func.arguments) rq_params[ arg.toString() ] = arguments[n++];
        this.communicator.value = "talking...";  
        var r = this.communicator.request(this.timeout, #post, this.url , rq_params);
        if( r instanceof Error ) // If error while parsing received data ...
          throw r.toString();
        return r;
      }
    }
    
    var sandbox = self#sandbox;
    if(!sandbox) 
      stderr << "sandbox not found"; 
      
    sandbox.value = "ready!";

    // definition of our "remote namespace", it contains thunks of remote methods 
    namespace TerraTest
    {
      const url = "http://www.terrainformatica.com/tests/simple-rpc.php"; // url of simple-rpc.php
      const communicator = sandbox; // will communicate through this DOM element.
      const timeout = 5000; // 5 seconds
      
      @web_method
        function add(p0, p1) {} // this is just a placholder for the proxy method
      
      @web_method 
        function sub(p0, p1) {}
      
    }

    // Testing our methods:

    function self#Add.onClick()
    {
      var p0 = self.$(#p0).value;
      var p1 = self.$(#p1).value;

      sandbox.value = "Value:" + TerraTest.add(p0,p1); // call remote method
    }

    function self#Sub.onClick()
    {
      var p0 = self.$(#p0).value;
      var p1 = self.$(#p1).value;
      
      sandbox.value = "Value:" + TerraTest.sub(p0,p1); // call remote method
    }
    
    </script>

</head>

<body>
<h1>Simple Remote Procedure Call Demo</h1>
<p>Input two numbers and press + or - buttons<br/>
<input type="number" id="p0" value=0 size=8 step=1/>
<input type="number" id="p1" value=0 size=8 step=1/> 
<button id="Add">+</button>
<button id="Sub">-</button>
<pre id="sandbox">
  sandbox
</pre>

</body>

</html>
