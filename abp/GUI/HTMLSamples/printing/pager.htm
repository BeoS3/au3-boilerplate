<html>
<head>
  <style>
  
    html { background: threedface; font:system; }
  
    frame[type="pager"]
    {
      border: 1px solid black;
      background: #CDF #CDF #889 #889;
      border-spacing: 10px; /* minimal spacing between page boxes */
	  padding:20px;         /* distance from borders of the frame */
    }
    
    frame[type="pager"] > .page
    {
      background-color:#FFF;
      border: 1px solid black;
      outline: 3px glow black 1px;
      outline-shift: 2px;
    }
  
    span#num-pages
    {
      display: inline-block;
    }
    
    select#paper-sizes span
    {
      display: inline-block;
    }
    select#paper-sizes span.name
    {
      margin-right:*;
    }
    select#paper-sizes span.width
    {
      margin-left:1em;
      margin-right:0.25em;
    }
    select#paper-sizes span.height
    {
      margin-left:0.25em;
    }
    
    span.output 
    {
      display:inline-block;
      text-align: right;
      line-height:1.2em;
      width: 2em;
      overflow:hidden;
    }
	
  </style>  
  <script type="text/tiscript">
  
    var pager = self#pager;
      
    
    self#do-test.onClick = function()
    {
      var root = pager[0];
	  //stdout.println(root);
	  //stdout.println(root.$(td));
      root.$(td).$content(<p>YYYY</p><p>ZZZZ</p>);
      pager.dropLayout();
    }
    
    self#load-doc.onClick = function()
    {
      var filename = view.selectFile( #load ); 
     
      self.$(button#print).state.disabled = true;
      self.$(button#print-default).state.disabled = true;
      
      pager.load(filename);
    }
    
    self.$(input#page-no).onValueChanged = function()
    {
      this.value = pager.firstPage(this.value);
    }
    
    self.$(button#print).onClick = function()
    {
      pager.print();
    }
    self.$(button#print-default).onClick = function()
    {
      pager.print(true);
    }
    
    pager.onControlEvent = function(evt)
    {
      if( evt.type == Event.UI_STATE_CHANGED)
      {
        self#num-pages.value = pager.pagesTotal();
      }
      else if( evt.type == Event.DOCUMENT_COMPLETE && evt.source == this[0])
      {
        self.$(button#print).state.disabled = false;
        self.$(button#print-default).state.disabled = false;
      }
    }
    
    function initPaperList() 
    {
      var psList = self.$(select#paper-sizes > popup);
      for(var pfd in pager.getPaperSizes())
      {
        var opt = new Element("option");
        psList.append(opt);
        opt.@#value = pfd.name;
        opt.$content(<span.name>{pfd.name}</span><span.width>{pfd.width}</span>&times;<span.height>{pfd.height}</height>);
        opt.w = pfd.width;
        opt.h = pfd.height;
        
      }
    }
    initPaperList();
    
    self.$(select#paper-sizes).onValueChanged = function()
    {
      pager.setPaperSize(this.value);
    }
    
    self.$(button#auto-scale).onValueChanged = function()
    {
      pager.autoScale( this.value );
    }
    self.$(input#scale).onValueChanged = function()
    {
      pager.scale( 100.0 / this.value );
    }
  
  </script>  
</head>
<body>
  <button #load-doc>Load doc</button>
  <button #do-test>Test Update</button>
  <input #page-no type=number value=1 step=2 /> of <span #num-pages></span>
  <button #print disabled>Select Printer and Print</button>
  <button #print-default disabled>Print on default printer</button>
  
  <select #paper-sizes></select>
  Scale:<input type="hslider" #scale min=10 max=200 value=100 buddy="scale-val" /> <span #scale-val .output />%
  <button type="checkbox" #auto-scale title="Scale to fit width in full if needed">Auto scale</button>
  
  <frame #pager type="pager" src="documents/content.htm" page-size="letter" cols=2 rows=1 
                page-template="page-template.htm" ></frame>

</body>
</html>