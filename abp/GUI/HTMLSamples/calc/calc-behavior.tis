type Calc: Behavior
{
        
  function attached()
  {
  }
  
  // button click handling    
  function onControlEvent(evt)
  {
    if(evt.type != Event.BUTTON_CLICK)
      return false;
    var v = evt.target.text;
    switch(v)
    {
      case "1": case "2":  case "3": 
      case "4": case "5":  case "6":
      case "7": case "8":  case "9": case "0": 
        this.appendDigit(v); break;
        
      case ".":
        this.appendDigit(v); 
        break;
  
      case "/": case "*":  case "-": case "+":  
        this.appendSign(v); 
        break;
  
      case "C":  
        this.result().text = ""; 
        this.error().text = ""; 
        this.update(); 
        break;
        
      case "=": 
        this.evaluate(); break
      default: 
        return false;
    }
    return true;
  }
  
  // keyboard clicks
  function onKey(evt)
  {
      if( evt.type != Event.KEY_CHAR )
          return false; // handling only KEY_CHAR
      stdout.printf("onKey:%x\n",evt.keyCode);
      switch( evt.keyCode )
      {
        case Event.VK_BACK:
          this.result().value = this.result().value.substring(0,-2);
          return true;
       
        case '1': case '2':  case '3': 
        case '4': case '5':  case '6':
        case '7': case '8':  case '9': case '0': 
        case '.':
          this.appendDigit(String.printf("%c",evt.keyCode)); 
          break;
          
        case '/': case '*':  case '-': case '+':  
          this.appendSign(String.printf("%c",evt.keyCode)); 
          break;
        
        case Event.VK_RETURN:  
          this.evaluate();
          break;
      }
      return false;
  }
  
  function result() 
  { 
    return this.select("input.result"); 
  }
  
  function appendDigit(digit)
  {
    this.result().value += digit;
  }
  
  function appendSign(sign)
  {
    this.result().value += String.printf(" %s ", sign);
  }
  
  function evaluate()
  {
    try 
    {
      var r = eval(this.result().value);
      if(typeof r == #float)
        this.result().value  = String.printf("%g",r);
      else
        this.result().value  = r.toString();
    }
    catch(e) 
    {
      this.error().text = //"Error:" + e.message.split(":")[2];
        e.message;
      this.update();
      return;
    }
    this.error().text = "";
    this.update();
  }
  
  function error() 
  { 
    return this.select("td.error"); 
  }
}