<html>
<head>
  <meta http-equiv='Content-Type' content='text/html; charset=UTF-8'/>
  <style>
    input[type="RegBinary"]
    {
      behavior:          masked-edit;
      prototype:         RegBinary;
      padding:           3px; 
      background-image:  url(theme:edit-normal); 
      background-repeat: stretch; 
      font-family:       consolas monospace;
      width:             70px;
      height:            min-intrinsic;
      margin:            4px; 
      font:              10pt verdana; 
      color: black;
      vertical-align:    middle;
      overflow:          hidden;
      }
  </style>
  <script type="text/tiscript">
    class RegBinary : Behavior
    {
      const mask_part   = { type:"text", width:2, filter:"0~9,a~f,A~F" };
      const mask_split  = " ";
      const mask_length = 255;
      
      function attached()
      {
        var mask = [mask_part];
        for( var i = 1; i < mask_length; i ++ )
          mask.push(mask_split, mask_part); 
        this.mask(mask);  
      }
      
      property value(v)
      {
        get 
        {
          var v = this.state.value;
          v = v.filter(:el: el.length);
          v = v.map(:el {if(el.length < 2) el+="0"; return el;});
          return v.toString();
        }
        set
        {
          v = v.split(",");
          for( var i = v.length; i < mask_length; i ++ )
            v.push(""); 
          this.state.value = v;
        }
      }
      
      function onControlEvent(evt)
      {
        const MASKED_EDIT_INCREMENT = 0x14; // masked-edit specific event
        const INC_UP = 1;
        const INC_DOWN = -1;
        const INC_HOME = -2;
        const INC_END  = 2;
        
        if( evt.type != MASKED_EDIT_INCREMENT )
          return false;
        var incCmd = evt.reason >> 16;
        var groupNo = evt.reason & 0xFFFF;
        var curVal = evt.data;
        
        stdout.printf("inc=%d group=%d val=%v\n", incCmd, groupNo, curVal);
        
        evt.data = curVal; // provide new data here
                
        return true; 
      }
      
    }
 </script>
</head>
<body>
  <input type="RegBinary" />
</body>
</html>