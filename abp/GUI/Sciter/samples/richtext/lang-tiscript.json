"tiscript": 
{
  comments:
  [
    { start: "//", end:"\n", class:"comment" }
    { start: "/*", end: "*/", class:"comment" }
  ]
  whitespaces:  " \t\f\r\n"
  breaks:       "{}()[].,+-/|=~!"
  blocks: 
  {
    block:{ start: "{", end: "}" },
    parameters:{ start: "(", end: ")" },
    index:{ start: "[", end: "]" }
  }
  nmtokens:
  [
    {
      class: "keyword1", 
      list: 
      [ 
        "type",
        "while", 
        "do"
      ]
    }
    {
      class: "keyword2", 
      list: 
      [ 
        "false",
        "true", 
        "null",
        "undefined"
      ]
    }
  ]
  literals:
  [
    { type: number; class:"number"; },
    { type: string; class:"string"; start:"\"", end: "\"", escape:"\\" }, 
    { type: string; class:"char"; start:"'", end: "'", escape:"\\" }
  ]
}

"html": 
{
  comments:
  [
    { start: "<!--", end:"-->", class:"comment" }
  ],
  whitespaces:  " \t\f"
  breaks:       ".,+-/|"
  blocks: 
  {
    markup: { start: "<", end: ">", class: "tag", if-not-in: markup;  }
  }
  nmtokens:
  [
    {
      class: "tagname", 
      if-in: markup;
      list: 
      [ 
        "html",
        "head", 
        "body",
      ]
    }
  ]
  literals:
  [
    { type: number, class:"number", if-in: markup }
    { type: string, class:"string", start:"\"", end: "\"", if-in: markup }
    { type: string, class:"string", start:"'", end: "'", if-in: markup }
  ]
}

"json": 
{
  comments:
  [
    { start: "//", end:"\n", class:"comment" },
    { start: "/*", end: "*/", class:"comment" }
  ],
  whitespaces:  " \t\f",
  breaks:       ".,+-/|",
  brackets: 
  {
    map:{ start: "{", end: "}" },
    array:{ start: "[", end: "]" }
  },
  keywords:
  [
    {
      class: "keyword", 
      list: 
      [ 
        "true",
        "false", 
        "null"
      ]
    }
    {
      class: "nmtoken", 
      list: [] 
    }
  ],
  literals:
  [
    { type: number, class:"number" },
    { type: string, class:"string" }, 
    { type: string, class:"string" }
  ]
}
