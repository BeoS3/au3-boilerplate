
class Map: Behavior
{
  const defaultLandColor = color("yellow");
  const defaultLandOutlineColor = color("gold");
  const defaultLandOutlineWidth = 1;
  const defaultHoveredLandColor = color("orange");
  const defaultHoveredLandOutlineColor = color("brown");
  const defaultHoveredLandOutlineWidth = 1;
  const defaultSelectedLandColor = color("red");
  const defaultSelectedLandOutlineColor = color("brown");
  const defaultSelectedLandOutlineWidth = 1;
  
  function attached() 
  { 
    this.hoveredCountry = null; 
    this.selectedCountry = this.@["value"] || null; 
    this.tooltip = this.$(popup);
    if(!this.tooltip)
    {
      this.tooltip = new Element("popup");
      this.append(this.tooltip);
    }
  }
  
  // overridable event handlers:
  function onCountryHover(countryName) { }
  function onValueChanged() {}
  
  property value(v)
  {
    get return this.selectedCountry;
    set 
    {
      this.selectedCountry = v;
      this.draw();
      this.refresh();
    }
  }

  function onSize() 
  { 
    this.draw(); 
  }

  function draw()
  {
    var hoveredCountry = this.hoveredCountry;
    var selectedCountry = this.selectedCountry;
        
    const landColor                = this.style["-land-color"] || defaultLandColor;
    const landOutlineColor         = this.style["-land-outline-color"] || defaultLandOutlineColor;
    const landOutlineWidth         = this.style["-land-outline-width"] || defaultLandOutlineWidth;
    const hoveredLandColor         = this.style["-hovered-land-color"] || defaultHoveredLandColor;
    const hoveredLandOutlineColor  = this.style["-hovered-land-outline-color"] || defaultHoveredLandOutlineColor;
    const hoveredLandOutlineWidth  = this.style["-hovered-land-outline-width"] || defaultHoveredLandOutlineWidth;
    const selectedLandColor        = this.style["-selected-land-color"] || defaultSelectedLandColor;
    const selectedLandOutlineColor = this.style["-selected-land-outline-color"] || defaultSelectedLandOutlineColor;
    const selectedLandOutlineWidth = this.style["-selected-land-outline-width"] || defaultSelectedLandOutlineWidth;
        
    var gfx = this.graphics(color("aquamarine"));

    var xscale = this.box(#width).toFloat() / WorldMap.X_SCALE;
    var yscale = this.box(#height).toFloat() / WorldMap.Y_SCALE;
    
    gfx.scale(xscale,yscale);
   
    // GMT line:
    gfx.lineWidth(1);
    gfx.lineColor(color("cadetblue"));
    gfx.line(399.5,0,399.5,400);
    
    // lands:
    gfx.lineWidth(landOutlineWidth);
    
    gfx.fillEvenOdd(false);
    
    var hoveredData = null;
    var currentData = null;
    for(var (countryName,countryData) in WorldMap.countries)
    {
      if(hoveredCountry == countryName)  { hoveredData = countryData; continue; }
      if(selectedCountry == countryName)  { currentData = countryData; continue; }
      
      if(countryName == "Antarctica")
      {
        gfx.fillColor(color("snow"));
        gfx.lineColor(landOutlineColor);
      }
      else
      {
        gfx.fillColor(landColor);
        gfx.lineColor(landOutlineColor);
      }      
      for(var path in countryData.paths)
        gfx.polygon(path);
    }
    if(currentData && (currentData !== hoveredData))
    {
      gfx.fillColor(selectedLandColor);
      gfx.lineColor(selectedLandOutlineColor);
      gfx.lineWidth(selectedLandOutlineWidth);
      for(var path in currentData.paths)
        gfx.polygon(path);
    }
    if(hoveredData)
    {
      gfx.fillColor(hoveredLandColor);
      gfx.lineColor(hoveredLandOutlineColor);
      gfx.lineWidth(hoveredLandOutlineWidth);
      for(var path in hoveredData.paths)
        gfx.polygon(path);
    }
  }
  
  function findCountry(x,y)
  {
    var gfx = this.graphics();
    for(var (countryName,countryData) in WorldMap.countries)
    {
      for(var path in countryData.paths)
        if(gfx.pointInPolygon(x,y,path)) // pointInPolygon uses current Graphics transformation settings like Graphics.scale()
          return countryName;
    }
    return null;
  }
  
  function onMouse(evt)
  {
    if( evt.type == Event.MOUSE_MOVE )
    {
      var countryName = this.findCountry(evt.x,evt.y);
      if( countryName != this.hoveredCountry )
      {
        this.tooltip.state.popup = false;
        this.hoveredCountry = countryName;
        this.draw();
        this.refresh();
        this.post( ::this.onCountryHover(countryName) );
      }
    } 
    else if( evt.type == Event.MOUSE_DOWN )
    {
      if( this.selectedCountry != this.hoveredCountry )
      {
        this.selectedCountry = this.hoveredCountry;
        this.draw();
        this.refresh();
        this.post( this.onValueChanged );
      }
    } 
    else if( evt.type == Event.MOUSE_LEAVE )
    {
      this.tooltip.state.popup = false;
      this.hoveredCountry = null;
      this.draw();
      this.refresh();
    }
  }
  function onControlEvent(evt)
  {
    // tooltip request handling:
    if( this.hoveredCountry && (evt.type == Event.REQUEST_TOOLTIP))
    { 
      this.tooltip.text = this.hoveredCountry;
      evt.source = this.tooltip;
      return true;
    }
  }

}